import default nsk_cuda
import default networks
import glob




class Convs
    Conv2d conv1, conv2

    def float __init__()
        Conv2d[1,5,5,2,1,he_normal_relu] self.conv1
        Conv2d[5,50,5,2,0,he_normal_relu] self.conv2

    def tensor forward(t x)
        x = self.conv1(x)
        x = self.conv2(x)
        return x


class Model
    Convs conv
    Linear w1, w2

    def float __init__()

        self.conv.__init__()

        Linear[1250, 100, xavu_relu, param] self.w1
        Linear[100, 10, xavu, param] self.w2
        

    def tensor forward(t x)


        x = self.conv.forward(x)

        x = x.view(-1,5*5*50)

        x = self.w1(x)
        x = relu(x)
        x = self.w2(x)

        return x


Model model
model.__init__()


tensor[2,1,28,28] x

x = model.forward(x)



