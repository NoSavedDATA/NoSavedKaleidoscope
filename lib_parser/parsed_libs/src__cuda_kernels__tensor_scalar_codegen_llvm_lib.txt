1821-05-20 11:08:10

	FunctionType *tensor_float_multTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy, Type::getFloatTy(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("tensor_float_mult", tensor_float_multTy);

	FunctionType *tensor_float_divTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy, Type::getFloatTy(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("tensor_float_div", tensor_float_divTy);

	FunctionType *tensor_float_addTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy, Type::getFloatTy(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("tensor_float_add", tensor_float_addTy);

	FunctionType *tensor_float_subTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy, Type::getFloatTy(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("tensor_float_sub", tensor_float_subTy);

	FunctionType *tensor_float_equalTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy, Type::getFloatTy(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("tensor_float_equal", tensor_float_equalTy);

	FunctionType *tensor_float_diffTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy, Type::getFloatTy(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("tensor_float_diff", tensor_float_diffTy);

	FunctionType *tensor_float_minorTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy, Type::getFloatTy(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("tensor_float_minor", tensor_float_minorTy);

	FunctionType *tensor_float_minor_eqTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy, Type::getFloatTy(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("tensor_float_minor_eq", tensor_float_minor_eqTy);

	FunctionType *tensor_float_higherTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy, Type::getFloatTy(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("tensor_float_higher", tensor_float_higherTy);

	FunctionType *tensor_float_higher_eqTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy, Type::getFloatTy(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("tensor_float_higher_eq", tensor_float_higher_eqTy);

	FunctionType *opa_gangnam_styleTy= FunctionType::get(
		Type::getFloatTy(*TheContext),
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("opa_gangnam_style", opa_gangnam_styleTy);
