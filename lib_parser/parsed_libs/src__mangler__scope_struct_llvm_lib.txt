1821-08-08 18:03:58

	FunctionType *set_scope_lineTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, Type::getInt32Ty(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("set_scope_line", set_scope_lineTy);

	FunctionType *scope_struct_CreateTy= FunctionType::get(
		int8PtrTy,
		{},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Create", scope_struct_CreateTy);

	FunctionType *scope_struct_CopyTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Copy", scope_struct_CopyTy);

	FunctionType *scope_struct_OverwriteTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Overwrite", scope_struct_OverwriteTy);

	FunctionType *scope_struct_DiveTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Dive", scope_struct_DiveTy);

	FunctionType *set_scope_first_argTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("set_scope_first_arg", set_scope_first_argTy);

	FunctionType *set_scope_scopeTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("set_scope_scope", set_scope_scopeTy);

	FunctionType *set_scope_thread_idTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, Type::getInt32Ty(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("set_scope_thread_id", set_scope_thread_idTy);

	FunctionType *set_scope_has_gradTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, Type::getInt32Ty(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("set_scope_has_grad", set_scope_has_gradTy);

	FunctionType *set_scope_function_nameTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("set_scope_function_name", set_scope_function_nameTy);

	FunctionType *get_scope_first_argTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("get_scope_first_arg", get_scope_first_argTy);

	FunctionType *get_scope_scopeTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("get_scope_scope", get_scope_scopeTy);

	FunctionType *get_scope_thread_idTy= FunctionType::get(
		Type::getInt32Ty(*TheContext),
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("get_scope_thread_id", get_scope_thread_idTy);

	FunctionType *get_scope_has_gradTy= FunctionType::get(
		Type::getInt32Ty(*TheContext),
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("get_scope_has_grad", get_scope_has_gradTy);

	FunctionType *scope_struct_Reset_ThreadsTy= FunctionType::get(
		Type::getFloatTy(*TheContext),
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Reset_Threads", scope_struct_Reset_ThreadsTy);

	FunctionType *scope_struct_Increment_ThreadTy= FunctionType::get(
		Type::getFloatTy(*TheContext),
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Increment_Thread", scope_struct_Increment_ThreadTy);

	FunctionType *set_scope_objectTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("set_scope_object", set_scope_objectTy);

	FunctionType *get_scope_objectTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("get_scope_object", get_scope_objectTy);

	FunctionType *scope_struct_Save_for_AsyncTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Save_for_Async", scope_struct_Save_for_AsyncTy);

	FunctionType *scope_struct_Load_for_AsyncTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Load_for_Async", scope_struct_Load_for_AsyncTy);

	FunctionType *scope_struct_Store_Asyncs_CountTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, Type::getInt32Ty(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Store_Asyncs_Count", scope_struct_Store_Asyncs_CountTy);

	FunctionType *scope_struct_PrintTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Print", scope_struct_PrintTy);

	FunctionType *scope_struct_Get_Async_ScopeTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, Type::getInt32Ty(*TheContext), Type::getInt32Ty(*TheContext)},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Get_Async_Scope", scope_struct_Get_Async_ScopeTy);

	FunctionType *scope_struct_Alloc_MarkSweepMapTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Alloc_MarkSweepMap", scope_struct_Alloc_MarkSweepMapTy);

	FunctionType *scope_struct_Copy_MarkSweepMapTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy, int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Copy_MarkSweepMap", scope_struct_Copy_MarkSweepMapTy);

	FunctionType *scope_struct_SweepTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Sweep", scope_struct_SweepTy);

	FunctionType *scope_struct_Clean_ScopeTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Clean_Scope", scope_struct_Clean_ScopeTy);

	FunctionType *scope_struct_DeleteTy= FunctionType::get(
		int8PtrTy,
		{int8PtrTy},
		false
	);
	TheModule->getOrInsertFunction("scope_struct_Delete", scope_struct_DeleteTy);
